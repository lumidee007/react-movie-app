{"version":3,"sources":["components/header/styles/header.js","components/header/index.js","components/main/styles/main.js","components/main/index.js","components/movieInfo/styles/movieInfo.js","components/movieInfo/index.js","App.js","index.js"],"names":["Container","styled","div","AppName","SearchBox","InputBox","input","Header","search","handleSearch","style","color","display","flexDirection","justifyContent","fontSize","fontWeight","type","placeholder","value","onChange","MovieMain","MovieImage","img","MovieName","span","MovieText","MovieInfo","MovieList","movie","setSelectedMovie","imdbID","Title","Poster","Year","Type","onClick","src","alt","MovieInfoColumn","MovieInfoMain","MovieInfoSpan","Close","axios","require","selectedMovie","useState","movieDetails","setMovieDetails","useEffect","get","API_KEY","then","res","data","imdbRating","Language","Release","Runtime","Genre","Director","Actors","Plot","margin","App","movieList","setMovieList","setSearch","timeoutID","setTimeoutID","fetchData","searchString","a","Search","className","e","target","timeout","setTimeout","clearTimeout","length","map","id","textAlign","paddingTop","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAYC,IAAOC,IAAV,yRAaTC,EAAUF,IAAOC,IAAV,0EAMPE,EAAYH,IAAOC,IAAV,mMAWTG,EAAWJ,IAAOK,MAAV,+K,yCC7BN,SAASC,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAarC,OACI,eAACT,EAAD,WACI,eAACG,EAAD,WAAS,cAAC,IAAD,CAAiBO,MAAO,CAACC,MAAO,YAAzC,qBACA,eAACP,EAAD,WACI,cAAC,IAAD,CAAiBM,MAdT,CAChBE,QAAS,OACTC,cAAe,MACfC,eAAgB,SAChBC,SAAU,OACVC,WAAY,SACZL,MAAO,WASC,cAACN,EAAD,CACAY,KAAK,OACLC,YAAY,eACZC,MAAOX,EACPY,SAAUX,UCvBnB,I,YAAMY,EAAYpB,IAAOC,IAAV,uNAWToB,EAAarB,IAAOsB,IAAV,wEAIVC,EAAYvB,IAAOwB,KAAV,iLASTC,EAAYzB,IAAOwB,KAAV,uMAWTE,EAAY1B,IAAOC,IAAV,wICnCP,SAAS0B,EAAT,GAAiD,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,iBACpCC,EAAqCF,EAArCE,OAAQC,EAA6BH,EAA7BG,MAAOC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,KAAMC,EAAQN,EAARM,KAElC,OACQ,eAACd,EAAD,CAAWe,QAAS,kBAAMN,EAAiBC,IAA3C,UACE,cAACT,EAAD,CAAYe,IAAKJ,EAAQK,IAAKN,IAC9B,cAACR,EAAD,UAAYQ,IACZ,eAACL,EAAD,WACE,eAACD,EAAD,oBAAkBQ,KAClB,eAACR,EAAD,oBAAkBS,WCVzB,IAAMnC,EAAYC,IAAOC,IAAV,0VAiBToB,EAAarB,IAAOsB,IAAV,6MAYVgB,EAAkBtC,IAAOC,IAAV,sFAOfsC,EAAgBvC,IAAOwB,KAAV,kKAUbgB,EAAgBxC,IAAOwB,KAAV,uNAWbiB,EAAQzC,IAAOwB,KAAV,2VCxDZkB,EAAQC,EAAQ,IAGP,SAASjB,EAAT,GAAuD,IAAnCkB,EAAkC,EAAlCA,cAAef,EAAmB,EAAnBA,iBAE9C,EAAwCgB,qBAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAOA,OALAC,qBAAU,WACNN,EAAMO,IAAN,oCAAuCL,EAAvC,mBAA+DM,IAAWC,MAAK,SAACC,GAAD,OAASL,EAAgBK,EAAIC,WAC7G,CAACT,IAIA,cAAC,EAAD,UACME,EACF,qCACA,cAAC,EAAD,CAAYV,IAAKU,EAAad,SAC9B,eAACM,EAAD,WACI,eAACC,EAAD,qBAAsB,cAACC,EAAD,UAAgBM,EAAaf,WACnD,eAACQ,EAAD,2BAA4B,cAACC,EAAD,UAAgBM,EAAaQ,gBACzD,eAACf,EAAD,oBAAqB,cAACC,EAAD,UAAgBM,EAAab,UAClD,eAACM,EAAD,wBAAyB,cAACC,EAAD,UAAgBM,EAAaS,cACtD,eAAChB,EAAD,uBAAwB,cAACC,EAAD,UAAgBM,EAAaU,aACrD,eAACjB,EAAD,uBAAwB,cAACC,EAAD,UAAgBM,EAAaW,aACrD,eAAClB,EAAD,qBAAsB,cAACC,EAAD,UAAgBM,EAAaY,WACnD,eAACnB,EAAD,wBAAyB,cAACC,EAAD,UAAgBM,EAAaa,cACtD,eAACpB,EAAD,sBAAuB,cAACC,EAAD,UAAgBM,EAAac,YACpD,eAACrB,EAAD,oBAAqB,cAACC,EAAD,UAAgBM,EAAae,aAEtD,cAACpB,EAAD,CAAON,QAAS,kBAAMN,KAAtB,kBAEA,oBAAIpB,MAAO,CAACqD,OAAO,WAAnB,2BChCL,IAAMZ,EAAU,WACjBR,EAAQC,EAAQ,IAEP,SAASoB,IAEtB,MAAkClB,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAA0CpB,qBAA1C,mBAAOD,EAAP,KAAsBf,EAAtB,KACA,EAA4BgB,qBAA5B,mBAAOtC,EAAP,KAAe2D,EAAf,KACA,EAAkCrB,qBAAlC,mBAAOsB,EAAP,KAAkBC,EAAlB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACG7B,EAAMO,IAAN,oCAAuCqB,EAAvC,mBAA8DpB,IADjE,OACVE,EADU,OAEhBa,EAAab,EAAIC,KAAKmB,QAFN,2CAAH,sDAef,OACE,sBAAKC,UAAU,MAAf,UACE,cAACnE,EAAD,CAAQE,aAXS,SAACkE,GACnBR,EAAUQ,EAAEC,OAAOzD,OACnB,IAAM0D,EAAUC,YAAW,kBAAMR,EAAUK,EAAEC,OAAOzD,SAAQ,KAC5DkD,EAAaQ,GACbE,aAAaX,IAOwB5D,OAAQA,IAC3CqC,GAAiB,cAAC,EAAD,CAAWA,cAAeA,EAAef,iBAAkBA,IAC7E,qBAAK4C,UAAU,YAAf,UACY,OAATT,QAAS,IAATA,OAAA,EAAAA,EAAWe,QAASf,EAAUgB,KAAI,SAAApD,GAAK,OACtC,cAACD,EAAD,CAA2BC,MAAOA,EAAOC,iBAAkBA,GAA1CD,EAAMqD,OACrB,oBAAIxE,MAAO,CAACyE,UAAW,SAAUpE,SAAU,OAAQqE,WAAY,SAA/D,kCC3BZC,IAASC,OACL,cAACtB,EAAD,IAEFuB,SAASC,eAAe,W","file":"static/js/main.eeac4033.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    background-color: black;\r\n    align-items: center;\r\n    color: white;\r\n    margin: 0;\r\n    padding: 20px;\r\n    font-weight: bold;\r\n    box-shadow: 0 3px 6px 0 blue;\r\n`\r\n\r\nexport const AppName = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\n\r\nexport const SearchBox = styled.div`\r\n    display: flex;\r\n    background-color: white;\r\n    padding: 5px;\r\n    width: 40%;\r\n    border-radius: 6px;\r\n    padding-left: 10px;\r\n    align-item: center;\r\n    \r\n`\r\n\r\nexport const InputBox = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    color: black;\r\n    width: 100%;\r\n    font-weight: bold;\r\n    font-size: 23px;\r\n    margin-left: 5px;\r\n\r\n`","import { Container, SearchBox, AppName, InputBox } from \"./styles/header\";\r\nimport LocalMoviesIcon from '@material-ui/icons/LocalMovies';\r\nimport SearchSharpIcon from '@material-ui/icons/SearchSharp';\r\n\r\nexport default function Header({ search, handleSearch }) {\r\n\r\n\r\n    const SearchStyle = {\r\n        display: \"flex\",\r\n        flexDirection: \"row\", \r\n        justifyContent: \"center\",\r\n        fontSize: \"30px\",\r\n        fontWeight: \"normal\",\r\n        color: \"black\"\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <AppName><LocalMoviesIcon style={{color: \"yellow\" }}/>React Movie App</AppName>\r\n            <SearchBox>\r\n                <SearchSharpIcon style={SearchStyle}/>\r\n                <InputBox \r\n                type=\"text\" \r\n                placeholder=\"Search Movie\" \r\n                value={search}\r\n                onChange={handleSearch} \r\n                />\r\n            </SearchBox>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const MovieMain = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    width: 280px;\r\n    object-fit: cover;\r\n    box-shadow: 0 3px 10px blue;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const MovieImage = styled.img`\r\n    height: 362px;\r\n    object-fit: cover;\r\n`\r\nexport const MovieName = styled.span`\r\n    margin: 10px 0 20px 0;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    opacity:0.8;\r\n`\r\n\r\nexport const MovieText = styled.span`\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    \r\n    margin-bottom: 0;\r\n`\r\n\r\nexport const MovieInfo = styled.div`\r\npadding: 0;\r\n    margin-top: 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    opacity:0.8;\r\n`","import {MovieMain, MovieImage,  MovieName, MovieInfo,MovieText} from \"./styles/main\"\r\n\r\n\r\nexport default function MovieList({ movie, setSelectedMovie }) {\r\n  let {imdbID, Title, Poster, Year, Type} = movie;\r\n\r\n  return (\r\n          <MovieMain onClick={() => setSelectedMovie(imdbID)} >\r\n            <MovieImage src={Poster} alt={Title}/>\r\n            <MovieName>{Title}</MovieName>\r\n            <MovieInfo>\r\n              <MovieText>Year: {Year}</MovieText>\r\n              <MovieText>Type: {Type}</MovieText>\r\n            </MovieInfo>\r\n          </MovieMain> \r\n  )\r\n}\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    padding: 20px 30px;\r\n    border-bottom: .1px solid grey;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    color: white;\r\n    margin: 0 auto;\r\n    box-shadow: 0 3px 10px blue;\r\n\r\n    @media (max-width: 800px) {\r\n        display: grid;\r\n        font-size: 10px;\r\n    }\r\n    \r\n`\r\n\r\nexport const MovieImage = styled.img`\r\n    height: 350px;\r\n    object-fit: cover;\r\n    background-size: cover;\r\n    \r\n\r\n    @media (max-width: 800px) {\r\n        grid-column: 1 / span 2;\r\n        grid-row: 1;\r\n    }\r\n`\r\n\r\nexport const MovieInfoColumn = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin: 10px;\r\n\r\n`\r\n\r\nexport const MovieInfoMain = styled.span`\r\n    margin: 10px 0 20px 0;\r\n    font-size: 22px;\r\n    font-weight: bold;\r\n    overflow: hidden;\r\n    margin: 0.5px;\r\n    padding: 0;\r\n`\r\n\r\n\r\nexport const MovieInfoSpan = styled.span`\r\n    margin: 10px 0 20px 0;\r\n    font-weight: normal;\r\n    font-size: 18px;\r\n    word-wrap: break-word\r\n    white-space: nowrap;\r\n    opacity:0.8;\r\n    margin-left: 5px;\r\n    padding: 0;\r\n`\r\n\r\nexport const Close = styled.span`\r\n\r\n    height: fit-content;\r\n    border-radius: 50%;\r\n    font-size: 18px;\r\n    margin-left: auto;\r\n    cursor: pointer;\r\n    color: red;\r\n    padding: 0 2px;\r\n    background: yellow;\r\n\r\n    @media (max-width: 700px) {\r\n        grid-column: 2 / span 3;\r\n        padding left: 10px;\r\n        grid-row: 1;\r\n    }\r\n\r\n    \r\n`","import {Container, MovieImage, MovieInfoColumn, MovieInfoMain, MovieInfoSpan, Close} from \"./styles/movieInfo\"\r\nimport {useState, useEffect} from \"react\"\r\nimport { API_KEY } from \"../../App\"\r\nconst axios = require('axios');\r\n\r\n\r\nexport default function MovieInfo({selectedMovie, setSelectedMovie}) {\r\n\r\n    const [movieDetails, setMovieDetails] = useState()\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://www.omdbapi.com/?i=${selectedMovie}&apikey=${API_KEY}`).then((res) => setMovieDetails(res.data))\r\n    }, [selectedMovie])\r\n\r\n            \r\n    return (\r\n        <Container>\r\n            { movieDetails ?\r\n            <>\r\n            <MovieImage src={movieDetails.Poster}/>\r\n            <MovieInfoColumn>\r\n                <MovieInfoMain>Movie: <MovieInfoSpan>{movieDetails.Title}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>IMDB Rating: <MovieInfoSpan>{movieDetails.imdbRating}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Year: <MovieInfoSpan>{movieDetails.Year}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Language: <MovieInfoSpan>{movieDetails.Language}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Release: <MovieInfoSpan>{movieDetails.Release}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Runtime: <MovieInfoSpan>{movieDetails.Runtime}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Genre: <MovieInfoSpan>{movieDetails.Genre}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Director: <MovieInfoSpan>{movieDetails.Director}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Actors: <MovieInfoSpan>{movieDetails.Actors}</MovieInfoSpan></MovieInfoMain>\r\n                <MovieInfoMain>Plot: <MovieInfoSpan>{movieDetails.Plot}</MovieInfoSpan></MovieInfoMain>\r\n            </MovieInfoColumn>\r\n            <Close onClick={() => setSelectedMovie()}>X</Close>\r\n            </> : \r\n            <h3 style={{margin:\" 0 auto\"}}> Loading...</h3>\r\n            }\r\n        </Container>\r\n    )\r\n  }","import { Header, MovieList, MovieInfo } from \"./components\";\nimport { useState} from \"react\"\nexport const API_KEY = \"667de12c\";\nconst axios = require('axios');\n\nexport default function App() {\n\n  const [movieList, setMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState()\n  const [search, setSearch] = useState()\n  const [timeoutID, setTimeoutID] = useState();\n\n  const fetchData = async (searchString) => {\n    const res = await  axios.get(`http://www.omdbapi.com/?s=${searchString}&apikey=${API_KEY}`)\n    setMovieList(res.data.Search)\n  }\n\n\n  const handleSearch = (e) => {\n     setSearch(e.target.value) \n     const timeout = setTimeout(() => fetchData(e.target.value), 500)\n     setTimeoutID(timeout)\n     clearTimeout(timeoutID)\n  }\n\n\n  \n  return (\n    <div className=\"App\">\n      <Header handleSearch={handleSearch} search={search}/>\n      {selectedMovie && <MovieInfo selectedMovie={selectedMovie} setSelectedMovie={setSelectedMovie} />}\n      <div className=\"container\">\n        {movieList?.length ? movieList.map(movie => (\n          <MovieList  key={movie.id} movie={movie} setSelectedMovie={setSelectedMovie}/>\n        )): <h3 style={{textAlign: \"center\", fontSize: \"45px\", paddingTop: \"250px\"}}>No Movie Search</h3>}\n      </div>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport './index.css';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}